apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
  namespace: mydomain-dev
  labels:
    app: n8n
spec:
  replicas: 1
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      serviceAccountName: n8n-serviceaccount
      containers:
      - name: n8n
        image: docker.n8n.io/n8nio/n8n
        ports:
        - containerPort: 5678
        env:
        - name: N8N_HOST
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: N8N_HOST
        - name: N8N_PORT
          value: "5678"
        - name: N8N_PROTOCOL
          value: "https"
        - name: NODE_ENV
          value: "production"
        - name: WEBHOOK_URL
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: WEBHOOK_URL
        - name: GENERIC_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: GENERIC_TIMEZONE
        - name: N8N_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: encryption-key
        - name: N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS
          value: "true"
        - name: N8N_RUNNERS_ENABLED
          value: "true"
        - name: N8N_PROXY_HOPS
          value: "1"
        - name: N8N_DIAGNOSTICS_ENABLED
          value: "false"
        volumeMounts:
        - name: n8n-data
          mountPath: /home/node/.n8n
        - name: n8n-local-files
          mountPath: /files
        startupProbe:
          httpGet:
            path: /
            port: 5678
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 30
      volumes:
      - name: n8n-data
        persistentVolumeClaim:
          claimName: n8n-data-pvc
      - name: n8n-local-files
        persistentVolumeClaim:
          claimName: n8n-local-files-pvc
